// Here is the Question: https://leetcode.com/problems/image-smoother/description/

class Solution {
private:
bool right(int i , int j , int m , int n) {
    return (i>=0 && j>= 0 && i < m && j < n);
}
public:

    vector<vector<int>> imageSmoother(vector<vector<int>>& img) {

        int m = img.size() , n = img[0].size();
        vector<vector<int>> smoothImg(m,vector<int>(n));
        for(int i = 0; i < m;i++) {

            for(int j = 0; j <n;j++) {

               double sum = 0, count = 0;

               for(int row = i-1; row<= i+1; row++) {
                for(int col = j-1; col <= j+1;col++) {
                    if(right(row,col,m,n)) {
                        // cout<<img[][j]<<" ";
                        sum+=img[row][col];
                        count++;
                    }
                }
                // cout<<endl;
               }
            //    cout<<sum<<" "<<count<<endl;
              smoothImg[i][j] = floor(sum/count);
            }
        }

        return smoothImg;
        
    }
};
