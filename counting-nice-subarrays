//https://leetcode.com/problems/count-number-of-nice-subarrays/description/
class Solution {
public:
    int numberOfSubarrays(vector<int>& nums, int k) {
        int n = nums.size();
        unordered_map<int,int> pf;
        int sum = 0, ans = 0;
        pf[sum] = 1;
        for(int i = 0; i  < n;i++)  {
            sum+= (nums[i]%2);
            if(pf.find(sum-k)!= pf.end()) {
                ans+= pf[sum-k];
            }
            pf[sum]++;
        }

        return ans;
        
    }
};
